#include <Arduino.h>
#include <avr/pgmspace.h>
#include "ILI948x.h"
#include "HSV.h"
#include "Leaves.h"
#include "LargeDigits.h"

// RLE encoded upper and lower halves of digits
// nHeight = 220, Arial
// ~4k data
const byte PROGMEM rowData0Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(48), FORE(14) + END,
  BACK(43), FORE(24) + END,
  BACK(39), FORE(31) + END,
  BACK(37), FORE(36) + END,
  BACK(35), FORE(40) + END,
  BACK(33), FORE(44) + END,
  BACK(31), FORE(48) + END,
  BACK(30), FORE(50) + END,
  BACK(29), FORE(52) + END,
  BACK(28), FORE(54) + END,
  BACK(27), FORE(57) + END,
  BACK(26), FORE(59) + END,
  BACK(25), FORE(60) + END,
  BACK(24), FORE(62) + END,
  BACK(23), FORE(27), BACK(10), FORE(27) + END,
  BACK(22), FORE(24), BACK(17), FORE(25) + END,
  BACK(21), FORE(23), BACK(22), FORE(23) + END,
  BACK(21), FORE(21), BACK(26), FORE(21) + END,
  BACK(20), FORE(20), BACK(29), FORE(21) + END,
  BACK(19), FORE(20), BACK(31), FORE(20) + END,
  BACK(19), FORE(19), BACK(33), FORE(20) + END,
  BACK(18), FORE(19), BACK(36), FORE(19) + END,
  BACK(18), FORE(18), BACK(37), FORE(19) + END,
  BACK(17), FORE(18), BACK(39), FORE(19) + END,
  BACK(17), FORE(18), BACK(40), FORE(18) + END,
  BACK(16), FORE(18), BACK(42), FORE(17) + END,
  BACK(16), FORE(17), BACK(44), FORE(17) + END,
  BACK(16), FORE(17), BACK(44), FORE(17) + END,
  BACK(15), FORE(17), BACK(46), FORE(17) + END,
  BACK(15), FORE(17), BACK(46), FORE(17) + END,
  BACK(14), FORE(18), BACK(47), FORE(16) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(13), FORE(17), BACK(50), FORE(16) + END,
  BACK(13), FORE(17), BACK(50), FORE(17) + END,
  BACK(13), FORE(17), BACK(50), FORE(17) + END,
  BACK(13), FORE(17), BACK(51), FORE(16) + END,
  BACK(12), FORE(17), BACK(52), FORE(17) + END,
  BACK(12), FORE(17), BACK(52), FORE(17) + END,
  BACK(12), FORE(17), BACK(52), FORE(17) + END,
  BACK(12), FORE(17), BACK(53), FORE(16) + END,
  BACK(12), FORE(16), BACK(54), FORE(17) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(11), FORE(17), BACK(55), FORE(16) + END,
  BACK(11), FORE(16), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(16), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
};

const byte PROGMEM rowData1Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(62), FORE(11) + END,
  BACK(61), FORE(12) + END,
  BACK(61), FORE(12) + END,
  BACK(60), FORE(13) + END,
  BACK(59), FORE(14) + END,
  BACK(59), FORE(14) + END,
  BACK(58), FORE(15) + END,
  BACK(57), FORE(16) + END,
  BACK(57), FORE(16) + END,
  BACK(56), FORE(17) + END,
  BACK(55), FORE(18) + END,
  BACK(54), FORE(19) + END,
  BACK(53), FORE(20) + END,
  BACK(52), FORE(21) + END,
  BACK(51), FORE(22) + END,
  BACK(50), FORE(23) + END,
  BACK(49), FORE(24) + END,
  BACK(48), FORE(25) + END,
  BACK(47), FORE(26) + END,
  BACK(46), FORE(27) + END,
  BACK(45), FORE(28) + END,
  BACK(43), FORE(30) + END,
  BACK(42), FORE(31) + END,
  BACK(41), FORE(32) + END,
  BACK(39), FORE(34) + END,
  BACK(38), FORE(35) + END,
  BACK(37), FORE(36) + END,
  BACK(35), FORE(38) + END,
  BACK(33), FORE(40) + END,
  BACK(32), FORE(41) + END,
  BACK(30), FORE(43) + END,
  BACK(28), FORE(45) + END,
  BACK(27), FORE(27), BACK(2), FORE(17) + END,
  BACK(25), FORE(28), BACK(3), FORE(17) + END,
  BACK(23), FORE(29), BACK(4), FORE(17) + END,
  BACK(21), FORE(30), BACK(5), FORE(17) + END,
  BACK(21), FORE(28), BACK(7), FORE(17) + END,
  BACK(21), FORE(27), BACK(8), FORE(17) + END,
  BACK(21), FORE(26), BACK(9), FORE(17) + END,
  BACK(21), FORE(24), BACK(11), FORE(17) + END,
  BACK(21), FORE(23), BACK(12), FORE(17) + END,
  BACK(21), FORE(21), BACK(14), FORE(17) + END,
  BACK(21), FORE(19), BACK(16), FORE(17) + END,
  BACK(21), FORE(18), BACK(17), FORE(17) + END,
  BACK(21), FORE(16), BACK(19), FORE(17) + END,
  BACK(21), FORE(14), BACK(21), FORE(17) + END,
  BACK(21), FORE(12), BACK(23), FORE(17) + END,
  BACK(21), FORE(10), BACK(25), FORE(17) + END,
  BACK(21), FORE(8), BACK(27), FORE(17) + END,
  BACK(21), FORE(6), BACK(29), FORE(17) + END,
  BACK(21), FORE(4), BACK(31), FORE(17) + END,
  BACK(21), FORE(1), BACK(34), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
};

const byte PROGMEM rowData2Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(46), FORE(16) + END,
  BACK(40), FORE(28) + END,
  BACK(36), FORE(35) + END,
  BACK(33), FORE(41) + END,
  BACK(31), FORE(45) + END,
  BACK(29), FORE(49) + END,
  BACK(27), FORE(53) + END,
  BACK(26), FORE(56) + END,
  BACK(24), FORE(59) + END,
  BACK(23), FORE(61) + END,
  BACK(22), FORE(63) + END,
  BACK(21), FORE(65) + END,
  BACK(20), FORE(67) + END,
  BACK(19), FORE(69) + END,
  BACK(18), FORE(29), BACK(13), FORE(29) + END,
  BACK(17), FORE(26), BACK(21), FORE(26) + END,
  BACK(16), FORE(24), BACK(27), FORE(24) + END,
  BACK(16), FORE(22), BACK(31), FORE(23) + END,
  BACK(15), FORE(22), BACK(33), FORE(22) + END,
  BACK(14), FORE(21), BACK(37), FORE(21) + END,
  BACK(14), FORE(20), BACK(39), FORE(20) + END,
  BACK(13), FORE(20), BACK(41), FORE(20) + END,
  BACK(13), FORE(19), BACK(43), FORE(20) + END,
  BACK(12), FORE(19), BACK(45), FORE(19) + END,
  BACK(12), FORE(18), BACK(47), FORE(18) + END,
  BACK(11), FORE(19), BACK(47), FORE(19) + END,
  BACK(11), FORE(18), BACK(49), FORE(18) + END,
  BACK(11), FORE(18), BACK(50), FORE(17) + END,
  BACK(10), FORE(18), BACK(51), FORE(18) + END,
  BACK(10), FORE(18), BACK(51), FORE(18) + END,
  BACK(10), FORE(17), BACK(53), FORE(17) + END,
  BACK(10), FORE(17), BACK(53), FORE(17) + END,
  BACK(9), FORE(17), BACK(54), FORE(18) + END,
  BACK(9), FORE(17), BACK(55), FORE(17) + END,
  BACK(9), FORE(17), BACK(55), FORE(17) + END,
  BACK(9), FORE(17), BACK(55), FORE(17) + END,
  BACK(9), FORE(17), BACK(55), FORE(17) + END,
  BACK(8), FORE(17), BACK(56), FORE(17) + END,
  BACK(8), FORE(17), BACK(56), FORE(17) + END,
  BACK(8), FORE(17), BACK(56), FORE(17) + END,
  BACK(8), FORE(17), BACK(56), FORE(17) + END,
  BACK(12), FORE(13), BACK(56), FORE(17) + END,
  BACK(21), FORE(4), BACK(56), FORE(17) + END,
  BACK(80), FORE(18) + END,
  BACK(80), FORE(18) + END,
  BACK(80), FORE(17) + END,
  BACK(79), FORE(18) + END,
  BACK(79), FORE(18) + END,
  BACK(79), FORE(18) + END,
  BACK(78), FORE(19) + END,
  BACK(78), FORE(18) + END,
  BACK(77), FORE(19) + END,
  BACK(77), FORE(19) + END,
  BACK(76), FORE(19) + END,
  BACK(76), FORE(19) + END,
  BACK(75), FORE(20) + END,
  BACK(74), FORE(20) + END,
  BACK(73), FORE(21) + END,
  BACK(73), FORE(20) + END,
  BACK(72), FORE(21) + END,
  BACK(71), FORE(21) + END,
  BACK(70), FORE(22) + END,
  BACK(69), FORE(22) + END,
  BACK(69), FORE(21) + END,
  BACK(68), FORE(22) + END,
  BACK(67), FORE(22) + END,
  BACK(66), FORE(22) + END,
  BACK(65), FORE(23) + END,
  BACK(64), FORE(23) + END,
  BACK(63), FORE(23) + END,
  BACK(62), FORE(23) + END,
  BACK(61), FORE(23) + END,
};

const byte PROGMEM rowData3Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(45), FORE(15) + END,
  BACK(40), FORE(25) + END,
  BACK(37), FORE(31) + END,
  BACK(34), FORE(37) + END,
  BACK(32), FORE(41) + END,
  BACK(30), FORE(45) + END,
  BACK(29), FORE(48) + END,
  BACK(27), FORE(51) + END,
  BACK(26), FORE(54) + END,
  BACK(25), FORE(56) + END,
  BACK(24), FORE(58) + END,
  BACK(23), FORE(60) + END,
  BACK(22), FORE(62) + END,
  BACK(21), FORE(64) + END,
  BACK(20), FORE(28), BACK(11), FORE(27) + END,
  BACK(19), FORE(25), BACK(19), FORE(24) + END,
  BACK(18), FORE(23), BACK(24), FORE(23) + END,
  BACK(18), FORE(22), BACK(27), FORE(21) + END,
  BACK(17), FORE(21), BACK(30), FORE(21) + END,
  BACK(16), FORE(21), BACK(33), FORE(20) + END,
  BACK(16), FORE(20), BACK(35), FORE(19) + END,
  BACK(15), FORE(20), BACK(37), FORE(19) + END,
  BACK(15), FORE(19), BACK(39), FORE(18) + END,
  BACK(14), FORE(19), BACK(40), FORE(19) + END,
  BACK(14), FORE(18), BACK(42), FORE(18) + END,
  BACK(13), FORE(19), BACK(43), FORE(17) + END,
  BACK(13), FORE(18), BACK(44), FORE(18) + END,
  BACK(13), FORE(18), BACK(44), FORE(18) + END,
  BACK(12), FORE(18), BACK(46), FORE(17) + END,
  BACK(12), FORE(18), BACK(46), FORE(17) + END,
  BACK(12), FORE(17), BACK(47), FORE(18) + END,
  BACK(11), FORE(18), BACK(48), FORE(17) + END,
  BACK(11), FORE(18), BACK(48), FORE(17) + END,
  BACK(11), FORE(17), BACK(49), FORE(17) + END,
  BACK(11), FORE(17), BACK(49), FORE(17) + END,
  BACK(10), FORE(18), BACK(49), FORE(17) + END,
  BACK(10), FORE(17), BACK(50), FORE(17) + END,
  BACK(14), FORE(13), BACK(50), FORE(17) + END,
  BACK(23), FORE(4), BACK(50), FORE(17) + END,
  BACK(77), FORE(17) + END,
  BACK(77), FORE(17) + END,
  BACK(76), FORE(18) + END,
  BACK(76), FORE(17) + END,
  BACK(76), FORE(17) + END,
  BACK(76), FORE(17) + END,
  BACK(75), FORE(18) + END,
  BACK(75), FORE(17) + END,
  BACK(74), FORE(18) + END,
  BACK(73), FORE(18) + END,
  BACK(73), FORE(18) + END,
  BACK(72), FORE(18) + END,
  BACK(71), FORE(19) + END,
  BACK(69), FORE(20) + END,
  BACK(68), FORE(21) + END,
  BACK(66), FORE(22) + END,
  BACK(64), FORE(23) + END,
  BACK(62), FORE(24) + END,
  BACK(59), FORE(26) + END,
  BACK(55), FORE(29) + END,
  BACK(45), FORE(38) + END,
  BACK(45), FORE(37) + END,
  BACK(45), FORE(35) + END,
  BACK(45), FORE(33) + END,
  BACK(45), FORE(32) + END,
  BACK(44), FORE(31) + END,
  BACK(44), FORE(34) + END,
  BACK(44), FORE(37) + END,
  BACK(44), FORE(39) + END,
  BACK(44), FORE(41) + END,
  BACK(44), FORE(43) + END,
  BACK(44), FORE(44) + END,
  BACK(44), FORE(45) + END,
};

const byte PROGMEM rowData4Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(68), FORE(14) + END,
  BACK(67), FORE(15) + END,
  BACK(66), FORE(16) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(64), FORE(18) + END,
  BACK(63), FORE(19) + END,
  BACK(63), FORE(19) + END,
  BACK(62), FORE(20) + END,
  BACK(61), FORE(21) + END,
  BACK(60), FORE(22) + END,
  BACK(60), FORE(22) + END,
  BACK(59), FORE(23) + END,
  BACK(58), FORE(24) + END,
  BACK(57), FORE(25) + END,
  BACK(57), FORE(25) + END,
  BACK(56), FORE(26) + END,
  BACK(55), FORE(27) + END,
  BACK(55), FORE(27) + END,
  BACK(54), FORE(28) + END,
  BACK(53), FORE(29) + END,
  BACK(52), FORE(30) + END,
  BACK(52), FORE(30) + END,
  BACK(51), FORE(31) + END,
  BACK(50), FORE(32) + END,
  BACK(50), FORE(32) + END,
  BACK(49), FORE(33) + END,
  BACK(48), FORE(34) + END,
  BACK(47), FORE(35) + END,
  BACK(47), FORE(17), BACK(1), FORE(17) + END,
  BACK(46), FORE(17), BACK(2), FORE(17) + END,
  BACK(45), FORE(17), BACK(3), FORE(17) + END,
  BACK(44), FORE(18), BACK(3), FORE(17) + END,
  BACK(44), FORE(17), BACK(4), FORE(17) + END,
  BACK(43), FORE(17), BACK(5), FORE(17) + END,
  BACK(42), FORE(17), BACK(6), FORE(17) + END,
  BACK(42), FORE(17), BACK(6), FORE(17) + END,
  BACK(41), FORE(17), BACK(7), FORE(17) + END,
  BACK(40), FORE(17), BACK(8), FORE(17) + END,
  BACK(39), FORE(18), BACK(8), FORE(17) + END,
  BACK(39), FORE(17), BACK(9), FORE(17) + END,
  BACK(38), FORE(17), BACK(10), FORE(17) + END,
  BACK(37), FORE(17), BACK(11), FORE(17) + END,
  BACK(36), FORE(18), BACK(11), FORE(17) + END,
  BACK(36), FORE(17), BACK(12), FORE(17) + END,
  BACK(35), FORE(17), BACK(13), FORE(17) + END,
  BACK(34), FORE(17), BACK(14), FORE(17) + END,
  BACK(34), FORE(17), BACK(14), FORE(17) + END,
  BACK(33), FORE(17), BACK(15), FORE(17) + END,
  BACK(32), FORE(17), BACK(16), FORE(17) + END,
  BACK(31), FORE(18), BACK(16), FORE(17) + END,
  BACK(31), FORE(17), BACK(17), FORE(17) + END,
  BACK(30), FORE(17), BACK(18), FORE(17) + END,
  BACK(29), FORE(17), BACK(19), FORE(17) + END,
  BACK(28), FORE(18), BACK(19), FORE(17) + END,
  BACK(28), FORE(17), BACK(20), FORE(17) + END,
  BACK(27), FORE(17), BACK(21), FORE(17) + END,
  BACK(26), FORE(17), BACK(22), FORE(17) + END,
  BACK(26), FORE(17), BACK(22), FORE(17) + END,
  BACK(25), FORE(17), BACK(23), FORE(17) + END,
  BACK(24), FORE(17), BACK(24), FORE(17) + END,
  BACK(23), FORE(18), BACK(24), FORE(17) + END,
  BACK(23), FORE(17), BACK(25), FORE(17) + END,
  BACK(22), FORE(17), BACK(26), FORE(17) + END,
  BACK(21), FORE(17), BACK(27), FORE(17) + END,
  BACK(20), FORE(18), BACK(27), FORE(17) + END,
  BACK(20), FORE(17), BACK(28), FORE(17) + END,
  BACK(19), FORE(17), BACK(29), FORE(17) + END,
  BACK(18), FORE(18), BACK(29), FORE(17) + END,
  BACK(18), FORE(17), BACK(30), FORE(17) + END,
  BACK(17), FORE(17), BACK(31), FORE(17) + END,
  BACK(16), FORE(17), BACK(32), FORE(17) + END,
};

const byte PROGMEM rowData5Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(25), FORE(69) + END,
  BACK(25), FORE(69) + END,
  BACK(25), FORE(69) + END,
  BACK(24), FORE(70) + END,
  BACK(24), FORE(70) + END,
  BACK(24), FORE(70) + END,
  BACK(24), FORE(70) + END,
  BACK(24), FORE(70) + END,
  BACK(23), FORE(71) + END,
  BACK(23), FORE(71) + END,
  BACK(23), FORE(71) + END,
  BACK(23), FORE(71) + END,
  BACK(23), FORE(71) + END,
  BACK(22), FORE(72) + END,
  BACK(22), FORE(72) + END,
  BACK(22), FORE(72) + END,
  BACK(22), FORE(72) + END,
  BACK(22), FORE(17) + END,
  BACK(21), FORE(18) + END,
  BACK(21), FORE(17) + END,
  BACK(21), FORE(17) + END,
  BACK(21), FORE(17) + END,
  BACK(21), FORE(17) + END,
  BACK(20), FORE(18) + END,
  BACK(20), FORE(18) + END,
  BACK(20), FORE(17) + END,
  BACK(20), FORE(17) + END,
  BACK(20), FORE(17) + END,
  BACK(19), FORE(18) + END,
  BACK(19), FORE(18) + END,
  BACK(19), FORE(17) + END,
  BACK(19), FORE(17) + END,
  BACK(19), FORE(17) + END,
  BACK(18), FORE(18) + END,
  BACK(18), FORE(18) + END,
  BACK(18), FORE(17) + END,
  BACK(18), FORE(17) + END,
  BACK(18), FORE(17) + END,
  BACK(18), FORE(17) + END,
  BACK(17), FORE(18) + END,
  BACK(17), FORE(17) + END,
  BACK(17), FORE(17) + END,
  BACK(17), FORE(17) + END,
  BACK(17), FORE(17) + END,
  BACK(16), FORE(18) + END,
  BACK(16), FORE(17), BACK(18), FORE(14) + END,
  BACK(16), FORE(17), BACK(14), FORE(23) + END,
  BACK(16), FORE(17), BACK(11), FORE(29) + END,
  BACK(16), FORE(17), BACK(8), FORE(34) + END,
  BACK(15), FORE(18), BACK(6), FORE(38) + END,
  BACK(15), FORE(17), BACK(5), FORE(42) + END,
  BACK(15), FORE(17), BACK(3), FORE(46) + END,
  BACK(15), FORE(17), BACK(2), FORE(48) + END,
  BACK(15), FORE(69) + END,
  BACK(14), FORE(71) + END,
  BACK(14), FORE(72) + END,
  BACK(14), FORE(73) + END,
  BACK(14), FORE(74) + END,
  BACK(14), FORE(75) + END,
  BACK(13), FORE(77) + END,
  BACK(13), FORE(35), BACK(12), FORE(31) + END,
  BACK(13), FORE(31), BACK(21), FORE(27) + END,
  BACK(13), FORE(28), BACK(26), FORE(26) + END,
  BACK(13), FORE(26), BACK(30), FORE(24) + END,
  BACK(12), FORE(25), BACK(34), FORE(23) + END,
  BACK(12), FORE(24), BACK(37), FORE(22) + END,
  BACK(12), FORE(23), BACK(39), FORE(21) + END,
  BACK(12), FORE(21), BACK(42), FORE(21) + END,
  BACK(12), FORE(20), BACK(44), FORE(20) + END,
  BACK(11), FORE(20), BACK(46), FORE(20) + END,
};

const byte PROGMEM rowData6Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(51), FORE(15) + END,
  BACK(45), FORE(26) + END,
  BACK(42), FORE(32) + END,
  BACK(39), FORE(38) + END,
  BACK(37), FORE(42) + END,
  BACK(35), FORE(46) + END,
  BACK(33), FORE(49) + END,
  BACK(32), FORE(52) + END,
  BACK(30), FORE(55) + END,
  BACK(29), FORE(57) + END,
  BACK(28), FORE(59) + END,
  BACK(27), FORE(61) + END,
  BACK(26), FORE(63) + END,
  BACK(25), FORE(65) + END,
  BACK(24), FORE(28), BACK(11), FORE(28) + END,
  BACK(23), FORE(25), BACK(18), FORE(26) + END,
  BACK(22), FORE(24), BACK(23), FORE(23) + END,
  BACK(21), FORE(23), BACK(26), FORE(23) + END,
  BACK(20), FORE(22), BACK(30), FORE(22) + END,
  BACK(20), FORE(21), BACK(32), FORE(21) + END,
  BACK(19), FORE(21), BACK(34), FORE(21) + END,
  BACK(18), FORE(21), BACK(36), FORE(20) + END,
  BACK(18), FORE(20), BACK(38), FORE(20) + END,
  BACK(17), FORE(20), BACK(40), FORE(19) + END,
  BACK(17), FORE(19), BACK(42), FORE(18) + END,
  BACK(16), FORE(19), BACK(43), FORE(19) + END,
  BACK(16), FORE(18), BACK(45), FORE(18) + END,
  BACK(15), FORE(19), BACK(45), FORE(18) + END,
  BACK(15), FORE(18), BACK(47), FORE(18) + END,
  BACK(14), FORE(18), BACK(48), FORE(18) + END,
  BACK(14), FORE(18), BACK(48), FORE(18) + END,
  BACK(14), FORE(17), BACK(50), FORE(17) + END,
  BACK(13), FORE(18), BACK(50), FORE(18) + END,
  BACK(13), FORE(17), BACK(51), FORE(18) + END,
  BACK(12), FORE(18), BACK(52), FORE(17) + END,
  BACK(12), FORE(17), BACK(53), FORE(9) + END,
  BACK(12), FORE(17) + END,
  BACK(12), FORE(17) + END,
  BACK(11), FORE(17) + END,
  BACK(11), FORE(17) + END,
  BACK(11), FORE(17) + END,
  BACK(10), FORE(17) + END,
  BACK(10), FORE(17) + END,
  BACK(10), FORE(17) + END,
  BACK(10), FORE(16) + END,
  BACK(10), FORE(16) + END,
  BACK(9), FORE(17) + END,
  BACK(9), FORE(17) + END,
  BACK(9), FORE(17) + END,
  BACK(9), FORE(16) + END,
  BACK(9), FORE(16), BACK(27), FORE(14) + END,
  BACK(9), FORE(16), BACK(23), FORE(22) + END,
  BACK(8), FORE(17), BACK(19), FORE(29) + END,
  BACK(8), FORE(17), BACK(17), FORE(34) + END,
  BACK(8), FORE(17), BACK(15), FORE(38) + END,
  BACK(8), FORE(17), BACK(13), FORE(42) + END,
  BACK(8), FORE(17), BACK(11), FORE(45) + END,
  BACK(8), FORE(17), BACK(10), FORE(48) + END,
  BACK(8), FORE(16), BACK(9), FORE(51) + END,
  BACK(8), FORE(16), BACK(8), FORE(53) + END,
  BACK(8), FORE(16), BACK(7), FORE(55) + END,
  BACK(7), FORE(17), BACK(6), FORE(58) + END,
  BACK(7), FORE(17), BACK(5), FORE(60) + END,
  BACK(7), FORE(17), BACK(4), FORE(61) + END,
  BACK(7), FORE(17), BACK(3), FORE(63) + END,
  BACK(7), FORE(17), BACK(2), FORE(24), BACK(11), FORE(30) + END,
  BACK(7), FORE(17), BACK(2), FORE(20), BACK(19), FORE(27) + END,
  BACK(7), FORE(17), BACK(1), FORE(18), BACK(25), FORE(25) + END,
  BACK(7), FORE(34), BACK(29), FORE(23) + END,
  BACK(7), FORE(32), BACK(33), FORE(22) + END,
  BACK(7), FORE(31), BACK(35), FORE(22) + END,
  BACK(7), FORE(30), BACK(37), FORE(21) + END,
};

const byte PROGMEM rowData7Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(92) + END,
  BACK(9), FORE(91) + END,
  BACK(9), FORE(90) + END,
  BACK(9), FORE(89) + END,
  BACK(79), FORE(19) + END,
  BACK(78), FORE(19) + END,
  BACK(77), FORE(19) + END,
  BACK(76), FORE(19) + END,
  BACK(75), FORE(19) + END,
  BACK(74), FORE(19) + END,
  BACK(74), FORE(19) + END,
  BACK(73), FORE(19) + END,
  BACK(72), FORE(19) + END,
  BACK(71), FORE(19) + END,
  BACK(70), FORE(19) + END,
  BACK(70), FORE(19) + END,
  BACK(69), FORE(19) + END,
  BACK(68), FORE(19) + END,
  BACK(68), FORE(19) + END,
  BACK(67), FORE(19) + END,
  BACK(66), FORE(19) + END,
  BACK(65), FORE(19) + END,
  BACK(65), FORE(19) + END,
  BACK(64), FORE(19) + END,
  BACK(63), FORE(19) + END,
  BACK(63), FORE(19) + END,
  BACK(62), FORE(19) + END,
  BACK(62), FORE(18) + END,
  BACK(61), FORE(19) + END,
  BACK(60), FORE(19) + END,
  BACK(60), FORE(19) + END,
  BACK(59), FORE(19) + END,
  BACK(58), FORE(19) + END,
  BACK(58), FORE(19) + END,
  BACK(57), FORE(19) + END,
  BACK(57), FORE(19) + END,
  BACK(56), FORE(19) + END,
  BACK(56), FORE(18) + END,
  BACK(55), FORE(19) + END,
  BACK(54), FORE(19) + END,
  BACK(54), FORE(19) + END,
  BACK(53), FORE(19) + END,
  BACK(53), FORE(19) + END,
  BACK(52), FORE(19) + END,
  BACK(52), FORE(18) + END,
  BACK(51), FORE(19) + END,
  BACK(51), FORE(18) + END,
  BACK(50), FORE(19) + END,
  BACK(50), FORE(18) + END,
  BACK(49), FORE(19) + END,
  BACK(49), FORE(18) + END,
  BACK(48), FORE(19) + END,
  BACK(48), FORE(18) + END,
  BACK(47), FORE(19) + END,
  BACK(47), FORE(18) + END,
  BACK(47), FORE(18) + END,
  BACK(46), FORE(18) + END,
};

const byte PROGMEM rowData8Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(47), FORE(15) + END,
  BACK(42), FORE(26) + END,
  BACK(38), FORE(33) + END,
  BACK(36), FORE(38) + END,
  BACK(34), FORE(42) + END,
  BACK(32), FORE(46) + END,
  BACK(30), FORE(49) + END,
  BACK(29), FORE(52) + END,
  BACK(27), FORE(55) + END,
  BACK(26), FORE(57) + END,
  BACK(25), FORE(60) + END,
  BACK(24), FORE(62) + END,
  BACK(23), FORE(64) + END,
  BACK(22), FORE(65) + END,
  BACK(21), FORE(28), BACK(12), FORE(27) + END,
  BACK(21), FORE(24), BACK(19), FORE(25) + END,
  BACK(20), FORE(23), BACK(24), FORE(23) + END,
  BACK(19), FORE(22), BACK(28), FORE(21) + END,
  BACK(19), FORE(21), BACK(30), FORE(21) + END,
  BACK(18), FORE(20), BACK(33), FORE(21) + END,
  BACK(17), FORE(20), BACK(35), FORE(20) + END,
  BACK(17), FORE(19), BACK(37), FORE(20) + END,
  BACK(17), FORE(19), BACK(38), FORE(19) + END,
  BACK(16), FORE(19), BACK(40), FORE(19) + END,
  BACK(16), FORE(18), BACK(42), FORE(18) + END,
  BACK(16), FORE(18), BACK(42), FORE(18) + END,
  BACK(15), FORE(18), BACK(44), FORE(18) + END,
  BACK(15), FORE(18), BACK(44), FORE(18) + END,
  BACK(15), FORE(17), BACK(46), FORE(17) + END,
  BACK(15), FORE(17), BACK(46), FORE(17) + END,
  BACK(14), FORE(18), BACK(46), FORE(18) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(18), BACK(46), FORE(18) + END,
  BACK(15), FORE(17), BACK(46), FORE(17) + END,
  BACK(15), FORE(17), BACK(46), FORE(17) + END,
  BACK(15), FORE(18), BACK(45), FORE(17) + END,
  BACK(15), FORE(18), BACK(44), FORE(18) + END,
  BACK(16), FORE(18), BACK(43), FORE(17) + END,
  BACK(16), FORE(18), BACK(42), FORE(18) + END,
  BACK(16), FORE(19), BACK(40), FORE(19) + END,
  BACK(17), FORE(19), BACK(39), FORE(18) + END,
  BACK(17), FORE(19), BACK(38), FORE(19) + END,
  BACK(18), FORE(19), BACK(36), FORE(19) + END,
  BACK(18), FORE(20), BACK(34), FORE(20) + END,
  BACK(19), FORE(21), BACK(30), FORE(21) + END,
  BACK(20), FORE(21), BACK(28), FORE(21) + END,
  BACK(21), FORE(22), BACK(24), FORE(22) + END,
  BACK(22), FORE(23), BACK(20), FORE(24) + END,
  BACK(23), FORE(26), BACK(12), FORE(27) + END,
  BACK(24), FORE(62) + END,
  BACK(25), FORE(60) + END,
  BACK(26), FORE(58) + END,
  BACK(28), FORE(54) + END,
  BACK(30), FORE(50) + END,
  BACK(32), FORE(46) + END,
  BACK(34), FORE(42) + END,
  BACK(32), FORE(46) + END,
  BACK(29), FORE(52) + END,
  BACK(27), FORE(56) + END,
  BACK(25), FORE(59) + END,
  BACK(24), FORE(62) + END,
  BACK(22), FORE(65) + END,
  BACK(21), FORE(68) + END,
};

const byte PROGMEM rowData9Upper[] =
{
  BACK(110) + END,
  BACK(110) + END,
  BACK(46), FORE(14) + END,
  BACK(41), FORE(24) + END,
  BACK(38), FORE(30) + END,
  BACK(35), FORE(36) + END,
  BACK(33), FORE(40) + END,
  BACK(31), FORE(44) + END,
  BACK(29), FORE(48) + END,
  BACK(28), FORE(50) + END,
  BACK(27), FORE(53) + END,
  BACK(25), FORE(56) + END,
  BACK(24), FORE(58) + END,
  BACK(23), FORE(60) + END,
  BACK(22), FORE(62) + END,
  BACK(21), FORE(64) + END,
  BACK(20), FORE(29), BACK(11), FORE(26) + END,
  BACK(19), FORE(27), BACK(18), FORE(23) + END,
  BACK(19), FORE(24), BACK(23), FORE(22) + END,
  BACK(18), FORE(23), BACK(27), FORE(21) + END,
  BACK(17), FORE(23), BACK(30), FORE(20) + END,
  BACK(16), FORE(23), BACK(32), FORE(19) + END,
  BACK(16), FORE(21), BACK(35), FORE(19) + END,
  BACK(15), FORE(21), BACK(37), FORE(19) + END,
  BACK(15), FORE(20), BACK(39), FORE(18) + END,
  BACK(14), FORE(20), BACK(41), FORE(18) + END,
  BACK(14), FORE(19), BACK(43), FORE(17) + END,
  BACK(13), FORE(20), BACK(43), FORE(18) + END,
  BACK(13), FORE(19), BACK(45), FORE(17) + END,
  BACK(12), FORE(19), BACK(47), FORE(17) + END,
  BACK(12), FORE(19), BACK(47), FORE(17) + END,
  BACK(12), FORE(18), BACK(49), FORE(17) + END,
  BACK(11), FORE(19), BACK(49), FORE(17) + END,
  BACK(11), FORE(18), BACK(51), FORE(16) + END,
  BACK(11), FORE(18), BACK(51), FORE(17) + END,
  BACK(11), FORE(17), BACK(52), FORE(17) + END,
  BACK(10), FORE(18), BACK(53), FORE(16) + END,
  BACK(10), FORE(18), BACK(53), FORE(17) + END,
  BACK(10), FORE(17), BACK(54), FORE(17) + END,
  BACK(10), FORE(17), BACK(54), FORE(17) + END,
  BACK(10), FORE(17), BACK(54), FORE(17) + END,
  BACK(9), FORE(18), BACK(55), FORE(17) + END,
  BACK(9), FORE(18), BACK(55), FORE(17) + END,
  BACK(9), FORE(17), BACK(56), FORE(17) + END,
  BACK(9), FORE(17), BACK(56), FORE(17) + END,
  BACK(9), FORE(17), BACK(56), FORE(17) + END,
  BACK(9), FORE(17), BACK(56), FORE(17) + END,
  BACK(9), FORE(17), BACK(56), FORE(18) + END,
  BACK(9), FORE(17), BACK(56), FORE(18) + END,
  BACK(9), FORE(17), BACK(56), FORE(18) + END,
  BACK(9), FORE(17), BACK(56), FORE(18) + END,
  BACK(9), FORE(17), BACK(56), FORE(18) + END,
  BACK(9), FORE(17), BACK(56), FORE(18) + END,
  BACK(9), FORE(17), BACK(56), FORE(18) + END,
  BACK(9), FORE(17), BACK(56), FORE(18) + END,
  BACK(9), FORE(17), BACK(55), FORE(19) + END,
  BACK(9), FORE(18), BACK(54), FORE(20) + END,
  BACK(10), FORE(17), BACK(54), FORE(20) + END,
  BACK(10), FORE(17), BACK(54), FORE(20) + END,
  BACK(10), FORE(17), BACK(54), FORE(20) + END,
  BACK(10), FORE(17), BACK(53), FORE(21) + END,
  BACK(10), FORE(18), BACK(52), FORE(21) + END,
  BACK(10), FORE(18), BACK(52), FORE(21) + END,
  BACK(11), FORE(18), BACK(50), FORE(22) + END,
  BACK(11), FORE(18), BACK(50), FORE(22) + END,
  BACK(11), FORE(19), BACK(48), FORE(23) + END,
  BACK(12), FORE(18), BACK(48), FORE(23) + END,
  BACK(12), FORE(19), BACK(46), FORE(24) + END,
  BACK(12), FORE(19), BACK(46), FORE(24) + END,
  BACK(13), FORE(19), BACK(44), FORE(25) + END,
  BACK(13), FORE(20), BACK(42), FORE(26) + END,
  BACK(14), FORE(20), BACK(40), FORE(27) + END,
  BACK(14), FORE(21), BACK(38), FORE(28) + END,
  BACK(15), FORE(21), BACK(36), FORE(29) + END,
};

const byte* upperData[] =
{
  rowData0Upper,
  rowData1Upper,
  rowData2Upper,
  rowData3Upper,
  rowData4Upper,
  rowData5Upper,
  rowData6Upper,
  rowData7Upper,
  rowData8Upper,
  rowData9Upper,
};


const byte PROGMEM rowData0Lower[] =
{
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(10), FORE(16), BACK(58), FORE(16) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(11), FORE(16), BACK(56), FORE(17) + END,
  BACK(11), FORE(16), BACK(56), FORE(16) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(12), FORE(16), BACK(54), FORE(17) + END,
  BACK(12), FORE(16), BACK(54), FORE(16) + END,
  BACK(12), FORE(17), BACK(52), FORE(17) + END,
  BACK(12), FORE(17), BACK(52), FORE(17) + END,
  BACK(12), FORE(17), BACK(52), FORE(17) + END,
  BACK(13), FORE(16), BACK(52), FORE(16) + END,
  BACK(13), FORE(17), BACK(50), FORE(17) + END,
  BACK(13), FORE(17), BACK(50), FORE(17) + END,
  BACK(14), FORE(16), BACK(50), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(14), FORE(17), BACK(48), FORE(17) + END,
  BACK(15), FORE(17), BACK(46), FORE(17) + END,
  BACK(15), FORE(17), BACK(46), FORE(17) + END,
  BACK(16), FORE(17), BACK(44), FORE(17) + END,
  BACK(16), FORE(17), BACK(43), FORE(18) + END,
  BACK(16), FORE(18), BACK(42), FORE(18) + END,
  BACK(17), FORE(18), BACK(40), FORE(18) + END,
  BACK(17), FORE(19), BACK(38), FORE(19) + END,
  BACK(18), FORE(19), BACK(36), FORE(19) + END,
  BACK(18), FORE(20), BACK(34), FORE(20) + END,
  BACK(19), FORE(20), BACK(32), FORE(20) + END,
  BACK(19), FORE(21), BACK(30), FORE(21) + END,
  BACK(20), FORE(21), BACK(28), FORE(21) + END,
  BACK(21), FORE(22), BACK(24), FORE(22) + END,
  BACK(21), FORE(23), BACK(22), FORE(23) + END,
  BACK(22), FORE(25), BACK(16), FORE(25) + END,
  BACK(23), FORE(27), BACK(10), FORE(27) + END,
  BACK(23), FORE(63) + END,
  BACK(24), FORE(61) + END,
  BACK(25), FORE(59) + END,
  BACK(26), FORE(57) + END,
  BACK(27), FORE(55) + END,
  BACK(29), FORE(52) + END,
  BACK(30), FORE(50) + END,
  BACK(31), FORE(48) + END,
  BACK(33), FORE(44) + END,
  BACK(35), FORE(40) + END,
  BACK(37), FORE(36) + END,
  BACK(39), FORE(32) + END,
  BACK(43), FORE(24) + END,
  BACK(48), FORE(14) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte PROGMEM rowData1Lower[] =
{
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(56), FORE(17) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte PROGMEM rowData2Lower[] =
{
  BACK(60), FORE(24) + END,
  BACK(59), FORE(24) + END,
  BACK(58), FORE(24) + END,
  BACK(57), FORE(24) + END,
  BACK(55), FORE(25) + END,
  BACK(54), FORE(25) + END,
  BACK(53), FORE(25) + END,
  BACK(52), FORE(25) + END,
  BACK(51), FORE(25) + END,
  BACK(50), FORE(25) + END,
  BACK(49), FORE(25) + END,
  BACK(48), FORE(25) + END,
  BACK(47), FORE(25) + END,
  BACK(45), FORE(26) + END,
  BACK(44), FORE(25) + END,
  BACK(43), FORE(25) + END,
  BACK(42), FORE(25) + END,
  BACK(41), FORE(25) + END,
  BACK(39), FORE(26) + END,
  BACK(38), FORE(26) + END,
  BACK(37), FORE(26) + END,
  BACK(36), FORE(26) + END,
  BACK(35), FORE(25) + END,
  BACK(34), FORE(25) + END,
  BACK(33), FORE(25) + END,
  BACK(31), FORE(26) + END,
  BACK(30), FORE(26) + END,
  BACK(29), FORE(26) + END,
  BACK(28), FORE(25) + END,
  BACK(27), FORE(25) + END,
  BACK(26), FORE(25) + END,
  BACK(25), FORE(25) + END,
  BACK(24), FORE(25) + END,
  BACK(23), FORE(24) + END,
  BACK(22), FORE(24) + END,
  BACK(21), FORE(24) + END,
  BACK(20), FORE(24) + END,
  BACK(20), FORE(23) + END,
  BACK(19), FORE(23) + END,
  BACK(18), FORE(22) + END,
  BACK(17), FORE(22) + END,
  BACK(16), FORE(22) + END,
  BACK(16), FORE(21) + END,
  BACK(15), FORE(21) + END,
  BACK(14), FORE(21) + END,
  BACK(14), FORE(20) + END,
  BACK(13), FORE(20) + END,
  BACK(12), FORE(20) + END,
  BACK(12), FORE(19) + END,
  BACK(11), FORE(19) + END,
  BACK(11), FORE(18) + END,
  BACK(10), FORE(19) + END,
  BACK(10), FORE(89) + END,
  BACK(9), FORE(90) + END,
  BACK(9), FORE(90) + END,
  BACK(8), FORE(91) + END,
  BACK(8), FORE(91) + END,
  BACK(8), FORE(91) + END,
  BACK(7), FORE(92) + END,
  BACK(7), FORE(92) + END,
  BACK(7), FORE(92) + END,
  BACK(7), FORE(92) + END,
  BACK(6), FORE(93) + END,
  BACK(6), FORE(93) + END,
  BACK(6), FORE(93) + END,
  BACK(6), FORE(93) + END,
  BACK(6), FORE(93) + END,
  BACK(6), FORE(93) + END,
  BACK(6), FORE(93) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte PROGMEM rowData3Lower[] =
{
  BACK(43), FORE(7), BACK(11), FORE(29) + END,
  BACK(43), FORE(2), BACK(21), FORE(25) + END,
  BACK(68), FORE(24) + END,
  BACK(70), FORE(23) + END,
  BACK(72), FORE(22) + END,
  BACK(73), FORE(22) + END,
  BACK(75), FORE(21) + END,
  BACK(76), FORE(20) + END,
  BACK(77), FORE(20) + END,
  BACK(78), FORE(19) + END,
  BACK(78), FORE(20) + END,
  BACK(79), FORE(19) + END,
  BACK(80), FORE(19) + END,
  BACK(80), FORE(19) + END,
  BACK(81), FORE(18) + END,
  BACK(82), FORE(18) + END,
  BACK(82), FORE(18) + END,
  BACK(82), FORE(18) + END,
  BACK(83), FORE(17) + END,
  BACK(83), FORE(17) + END,
  BACK(83), FORE(18) + END,
  BACK(83), FORE(18) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(22), FORE(4), BACK(58), FORE(17) + END,
  BACK(13), FORE(13), BACK(58), FORE(17) + END,
  BACK(9), FORE(18), BACK(57), FORE(17) + END,
  BACK(9), FORE(18), BACK(56), FORE(18) + END,
  BACK(9), FORE(18), BACK(56), FORE(17) + END,
  BACK(9), FORE(18), BACK(56), FORE(17) + END,
  BACK(10), FORE(18), BACK(55), FORE(17) + END,
  BACK(10), FORE(18), BACK(54), FORE(18) + END,
  BACK(10), FORE(18), BACK(54), FORE(18) + END,
  BACK(10), FORE(19), BACK(53), FORE(17) + END,
  BACK(11), FORE(18), BACK(52), FORE(18) + END,
  BACK(11), FORE(19), BACK(51), FORE(18) + END,
  BACK(11), FORE(19), BACK(50), FORE(18) + END,
  BACK(12), FORE(19), BACK(49), FORE(18) + END,
  BACK(12), FORE(19), BACK(48), FORE(18) + END,
  BACK(12), FORE(20), BACK(46), FORE(19) + END,
  BACK(13), FORE(19), BACK(45), FORE(19) + END,
  BACK(13), FORE(20), BACK(44), FORE(19) + END,
  BACK(14), FORE(20), BACK(42), FORE(19) + END,
  BACK(14), FORE(21), BACK(40), FORE(20) + END,
  BACK(15), FORE(21), BACK(37), FORE(21) + END,
  BACK(16), FORE(21), BACK(35), FORE(21) + END,
  BACK(16), FORE(22), BACK(33), FORE(22) + END,
  BACK(17), FORE(23), BACK(29), FORE(23) + END,
  BACK(18), FORE(24), BACK(25), FORE(24) + END,
  BACK(18), FORE(26), BACK(20), FORE(26) + END,
  BACK(19), FORE(29), BACK(12), FORE(29) + END,
  BACK(20), FORE(68) + END,
  BACK(21), FORE(66) + END,
  BACK(22), FORE(64) + END,
  BACK(23), FORE(62) + END,
  BACK(25), FORE(59) + END,
  BACK(26), FORE(56) + END,
  BACK(27), FORE(54) + END,
  BACK(29), FORE(50) + END,
  BACK(31), FORE(47) + END,
  BACK(32), FORE(44) + END,
  BACK(35), FORE(38) + END,
  BACK(37), FORE(33) + END,
  BACK(41), FORE(26) + END,
  BACK(46), FORE(16) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte PROGMEM rowData4Lower[] =
{
  BACK(15), FORE(18), BACK(32), FORE(17) + END,
  BACK(15), FORE(17), BACK(33), FORE(17) + END,
  BACK(14), FORE(17), BACK(34), FORE(17) + END,
  BACK(13), FORE(17), BACK(35), FORE(17) + END,
  BACK(13), FORE(17), BACK(35), FORE(17) + END,
  BACK(12), FORE(17), BACK(36), FORE(17) + END,
  BACK(11), FORE(17), BACK(37), FORE(17) + END,
  BACK(10), FORE(18), BACK(37), FORE(17) + END,
  BACK(10), FORE(17), BACK(38), FORE(17) + END,
  BACK(9), FORE(17), BACK(39), FORE(17) + END,
  BACK(8), FORE(17), BACK(40), FORE(17) + END,
  BACK(7), FORE(18), BACK(40), FORE(17) + END,
  BACK(7), FORE(17), BACK(41), FORE(17) + END,
  BACK(6), FORE(17), BACK(42), FORE(17) + END,
  BACK(5), FORE(17), BACK(43), FORE(17) + END,
  BACK(5), FORE(17), BACK(43), FORE(17) + END,
  BACK(4), FORE(17), BACK(44), FORE(17) + END,
  BACK(3), FORE(17), BACK(45), FORE(17) + END,
  BACK(2), FORE(18), BACK(45), FORE(17) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(2), FORE(99) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(65), FORE(17) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte PROGMEM rowData5Lower[] =
{
  BACK(11), FORE(20), BACK(47), FORE(19) + END,
  BACK(11), FORE(19), BACK(48), FORE(20) + END,
  BACK(15), FORE(14), BACK(50), FORE(19) + END,
  BACK(24), FORE(4), BACK(52), FORE(18) + END,
  BACK(80), FORE(19) + END,
  BACK(81), FORE(18) + END,
  BACK(81), FORE(18) + END,
  BACK(82), FORE(17) + END,
  BACK(82), FORE(18) + END,
  BACK(82), FORE(18) + END,
  BACK(83), FORE(17) + END,
  BACK(83), FORE(17) + END,
  BACK(83), FORE(17) + END,
  BACK(83), FORE(18) + END,
  BACK(83), FORE(18) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(17) + END,
  BACK(84), FORE(16) + END,
  BACK(83), FORE(17) + END,
  BACK(17), FORE(9), BACK(57), FORE(17) + END,
  BACK(9), FORE(17), BACK(57), FORE(17) + END,
  BACK(9), FORE(17), BACK(57), FORE(17) + END,
  BACK(9), FORE(18), BACK(55), FORE(17) + END,
  BACK(9), FORE(18), BACK(55), FORE(17) + END,
  BACK(10), FORE(17), BACK(55), FORE(17) + END,
  BACK(10), FORE(17), BACK(55), FORE(17) + END,
  BACK(10), FORE(18), BACK(53), FORE(17) + END,
  BACK(10), FORE(18), BACK(53), FORE(17) + END,
  BACK(11), FORE(18), BACK(51), FORE(18) + END,
  BACK(11), FORE(18), BACK(51), FORE(17) + END,
  BACK(11), FORE(18), BACK(50), FORE(18) + END,
  BACK(11), FORE(19), BACK(49), FORE(17) + END,
  BACK(12), FORE(18), BACK(48), FORE(18) + END,
  BACK(12), FORE(19), BACK(46), FORE(18) + END,
  BACK(13), FORE(19), BACK(44), FORE(19) + END,
  BACK(13), FORE(20), BACK(43), FORE(18) + END,
  BACK(14), FORE(19), BACK(42), FORE(19) + END,
  BACK(14), FORE(20), BACK(40), FORE(19) + END,
  BACK(15), FORE(20), BACK(37), FORE(20) + END,
  BACK(15), FORE(22), BACK(34), FORE(21) + END,
  BACK(16), FORE(22), BACK(32), FORE(21) + END,
  BACK(17), FORE(22), BACK(29), FORE(22) + END,
  BACK(17), FORE(24), BACK(25), FORE(24) + END,
  BACK(18), FORE(26), BACK(20), FORE(25) + END,
  BACK(19), FORE(29), BACK(12), FORE(28) + END,
  BACK(20), FORE(67) + END,
  BACK(21), FORE(65) + END,
  BACK(22), FORE(63) + END,
  BACK(23), FORE(61) + END,
  BACK(24), FORE(59) + END,
  BACK(25), FORE(56) + END,
  BACK(27), FORE(53) + END,
  BACK(28), FORE(50) + END,
  BACK(30), FORE(47) + END,
  BACK(32), FORE(43) + END,
  BACK(34), FORE(38) + END,
  BACK(37), FORE(33) + END,
  BACK(40), FORE(26) + END,
  BACK(46), FORE(15) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte PROGMEM rowData6Lower[] =
{
  BACK(7), FORE(28), BACK(40), FORE(21) + END,
  BACK(7), FORE(27), BACK(42), FORE(20) + END,
  BACK(7), FORE(26), BACK(44), FORE(20) + END,
  BACK(7), FORE(26), BACK(45), FORE(19) + END,
  BACK(7), FORE(25), BACK(47), FORE(19) + END,
  BACK(7), FORE(24), BACK(48), FORE(19) + END,
  BACK(7), FORE(23), BACK(50), FORE(18) + END,
  BACK(7), FORE(23), BACK(50), FORE(19) + END,
  BACK(7), FORE(22), BACK(52), FORE(18) + END,
  BACK(7), FORE(22), BACK(52), FORE(18) + END,
  BACK(7), FORE(21), BACK(54), FORE(18) + END,
  BACK(7), FORE(21), BACK(54), FORE(18) + END,
  BACK(7), FORE(21), BACK(54), FORE(18) + END,
  BACK(7), FORE(20), BACK(56), FORE(17) + END,
  BACK(7), FORE(20), BACK(56), FORE(17) + END,
  BACK(7), FORE(20), BACK(56), FORE(17) + END,
  BACK(8), FORE(19), BACK(56), FORE(18) + END,
  BACK(8), FORE(18), BACK(58), FORE(17) + END,
  BACK(8), FORE(18), BACK(58), FORE(17) + END,
  BACK(8), FORE(18), BACK(58), FORE(17) + END,
  BACK(8), FORE(18), BACK(58), FORE(17) + END,
  BACK(8), FORE(18), BACK(58), FORE(17) + END,
  BACK(8), FORE(18), BACK(58), FORE(17) + END,
  BACK(8), FORE(18), BACK(58), FORE(17) + END,
  BACK(8), FORE(18), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(10), FORE(17), BACK(57), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(11), FORE(17), BACK(55), FORE(17) + END,
  BACK(11), FORE(17), BACK(55), FORE(17) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(11), FORE(18), BACK(53), FORE(17) + END,
  BACK(12), FORE(17), BACK(53), FORE(17) + END,
  BACK(12), FORE(18), BACK(51), FORE(18) + END,
  BACK(12), FORE(18), BACK(51), FORE(17) + END,
  BACK(13), FORE(18), BACK(50), FORE(17) + END,
  BACK(13), FORE(18), BACK(49), FORE(18) + END,
  BACK(14), FORE(18), BACK(47), FORE(18) + END,
  BACK(14), FORE(18), BACK(47), FORE(18) + END,
  BACK(15), FORE(18), BACK(45), FORE(18) + END,
  BACK(15), FORE(19), BACK(43), FORE(19) + END,
  BACK(16), FORE(19), BACK(42), FORE(18) + END,
  BACK(16), FORE(20), BACK(40), FORE(19) + END,
  BACK(17), FORE(20), BACK(38), FORE(19) + END,
  BACK(17), FORE(21), BACK(36), FORE(20) + END,
  BACK(18), FORE(21), BACK(33), FORE(21) + END,
  BACK(19), FORE(21), BACK(31), FORE(21) + END,
  BACK(19), FORE(23), BACK(28), FORE(22) + END,
  BACK(20), FORE(24), BACK(24), FORE(23) + END,
  BACK(21), FORE(26), BACK(18), FORE(25) + END,
  BACK(22), FORE(29), BACK(11), FORE(27) + END,
  BACK(23), FORE(66) + END,
  BACK(24), FORE(64) + END,
  BACK(25), FORE(62) + END,
  BACK(26), FORE(59) + END,
  BACK(27), FORE(57) + END,
  BACK(29), FORE(54) + END,
  BACK(30), FORE(52) + END,
  BACK(32), FORE(48) + END,
  BACK(33), FORE(45) + END,
  BACK(35), FORE(42) + END,
  BACK(38), FORE(36) + END,
  BACK(40), FORE(32) + END,
  BACK(44), FORE(25) + END,
  BACK(49), FORE(15) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte PROGMEM rowData7Lower[] =
{
  BACK(46), FORE(18) + END,
  BACK(45), FORE(19) + END,
  BACK(45), FORE(18) + END,
  BACK(44), FORE(19) + END,
  BACK(44), FORE(18) + END,
  BACK(44), FORE(18) + END,
  BACK(43), FORE(18) + END,
  BACK(43), FORE(18) + END,
  BACK(42), FORE(19) + END,
  BACK(42), FORE(18) + END,
  BACK(42), FORE(18) + END,
  BACK(41), FORE(18) + END,
  BACK(41), FORE(18) + END,
  BACK(40), FORE(19) + END,
  BACK(40), FORE(18) + END,
  BACK(40), FORE(18) + END,
  BACK(39), FORE(18) + END,
  BACK(39), FORE(18) + END,
  BACK(39), FORE(18) + END,
  BACK(38), FORE(18) + END,
  BACK(38), FORE(18) + END,
  BACK(38), FORE(18) + END,
  BACK(37), FORE(18) + END,
  BACK(37), FORE(18) + END,
  BACK(37), FORE(18) + END,
  BACK(37), FORE(17) + END,
  BACK(36), FORE(18) + END,
  BACK(36), FORE(18) + END,
  BACK(36), FORE(17) + END,
  BACK(36), FORE(17) + END,
  BACK(35), FORE(18) + END,
  BACK(35), FORE(17) + END,
  BACK(35), FORE(17) + END,
  BACK(34), FORE(18) + END,
  BACK(34), FORE(18) + END,
  BACK(34), FORE(17) + END,
  BACK(34), FORE(17) + END,
  BACK(33), FORE(18) + END,
  BACK(33), FORE(18) + END,
  BACK(33), FORE(17) + END,
  BACK(33), FORE(17) + END,
  BACK(33), FORE(17) + END,
  BACK(32), FORE(18) + END,
  BACK(32), FORE(17) + END,
  BACK(32), FORE(17) + END,
  BACK(32), FORE(17) + END,
  BACK(32), FORE(17) + END,
  BACK(31), FORE(18) + END,
  BACK(31), FORE(17) + END,
  BACK(31), FORE(17) + END,
  BACK(31), FORE(17) + END,
  BACK(31), FORE(17) + END,
  BACK(31), FORE(17) + END,
  BACK(30), FORE(18) + END,
  BACK(30), FORE(18) + END,
  BACK(30), FORE(17) + END,
  BACK(30), FORE(17) + END,
  BACK(30), FORE(17) + END,
  BACK(30), FORE(17) + END,
  BACK(30), FORE(17) + END,
  BACK(30), FORE(17) + END,
  BACK(29), FORE(18) + END,
  BACK(29), FORE(18) + END,
  BACK(29), FORE(17) + END,
  BACK(29), FORE(17) + END,
  BACK(29), FORE(17) + END,
  BACK(29), FORE(17) + END,
  BACK(29), FORE(17) + END,
  BACK(29), FORE(17) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte PROGMEM rowData8Lower[] =
{
  BACK(20), FORE(28), BACK(13), FORE(29) + END,
  BACK(19), FORE(25), BACK(21), FORE(26) + END,
  BACK(18), FORE(24), BACK(26), FORE(24) + END,
  BACK(17), FORE(23), BACK(30), FORE(23) + END,
  BACK(16), FORE(22), BACK(33), FORE(22) + END,
  BACK(15), FORE(22), BACK(36), FORE(21) + END,
  BACK(15), FORE(21), BACK(38), FORE(21) + END,
  BACK(14), FORE(20), BACK(41), FORE(20) + END,
  BACK(14), FORE(19), BACK(43), FORE(20) + END,
  BACK(13), FORE(20), BACK(44), FORE(20) + END,
  BACK(13), FORE(19), BACK(46), FORE(19) + END,
  BACK(12), FORE(19), BACK(48), FORE(19) + END,
  BACK(12), FORE(18), BACK(49), FORE(19) + END,
  BACK(11), FORE(19), BACK(50), FORE(18) + END,
  BACK(11), FORE(18), BACK(52), FORE(18) + END,
  BACK(11), FORE(18), BACK(52), FORE(18) + END,
  BACK(10), FORE(18), BACK(54), FORE(17) + END,
  BACK(10), FORE(18), BACK(54), FORE(18) + END,
  BACK(10), FORE(17), BACK(55), FORE(18) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(9), FORE(18), BACK(56), FORE(17) + END,
  BACK(9), FORE(17), BACK(57), FORE(18) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(17), BACK(58), FORE(17) + END,
  BACK(9), FORE(18), BACK(57), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(17), BACK(56), FORE(17) + END,
  BACK(10), FORE(18), BACK(55), FORE(17) + END,
  BACK(10), FORE(18), BACK(54), FORE(18) + END,
  BACK(11), FORE(17), BACK(54), FORE(17) + END,
  BACK(11), FORE(18), BACK(52), FORE(18) + END,
  BACK(11), FORE(18), BACK(52), FORE(18) + END,
  BACK(12), FORE(18), BACK(50), FORE(18) + END,
  BACK(12), FORE(18), BACK(50), FORE(18) + END,
  BACK(12), FORE(19), BACK(48), FORE(19) + END,
  BACK(13), FORE(19), BACK(46), FORE(19) + END,
  BACK(13), FORE(20), BACK(45), FORE(19) + END,
  BACK(14), FORE(19), BACK(44), FORE(19) + END,
  BACK(14), FORE(20), BACK(42), FORE(20) + END,
  BACK(15), FORE(21), BACK(39), FORE(20) + END,
  BACK(16), FORE(21), BACK(36), FORE(21) + END,
  BACK(16), FORE(23), BACK(33), FORE(22) + END,
  BACK(17), FORE(23), BACK(30), FORE(23) + END,
  BACK(18), FORE(25), BACK(25), FORE(24) + END,
  BACK(19), FORE(26), BACK(20), FORE(26) + END,
  BACK(20), FORE(29), BACK(12), FORE(30) + END,
  BACK(20), FORE(70) + END,
  BACK(21), FORE(68) + END,
  BACK(23), FORE(65) + END,
  BACK(24), FORE(62) + END,
  BACK(25), FORE(60) + END,
  BACK(26), FORE(58) + END,
  BACK(28), FORE(54) + END,
  BACK(29), FORE(52) + END,
  BACK(31), FORE(48) + END,
  BACK(33), FORE(44) + END,
  BACK(35), FORE(40) + END,
  BACK(38), FORE(34) + END,
  BACK(42), FORE(26) + END,
  BACK(47), FORE(16) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte PROGMEM rowData9Lower[] =
{
  BACK(15), FORE(22), BACK(34), FORE(30) + END,
  BACK(16), FORE(22), BACK(32), FORE(31) + END,
  BACK(16), FORE(24), BACK(28), FORE(33) + END,
  BACK(17), FORE(25), BACK(24), FORE(17), BACK(1), FORE(17) + END,
  BACK(18), FORE(27), BACK(19), FORE(19), BACK(1), FORE(17) + END,
  BACK(19), FORE(30), BACK(11), FORE(22), BACK(2), FORE(17) + END,
  BACK(19), FORE(62), BACK(3), FORE(17) + END,
  BACK(20), FORE(60), BACK(4), FORE(17) + END,
  BACK(21), FORE(58), BACK(5), FORE(17) + END,
  BACK(22), FORE(56), BACK(6), FORE(17) + END,
  BACK(23), FORE(54), BACK(7), FORE(16) + END,
  BACK(24), FORE(52), BACK(8), FORE(16) + END,
  BACK(26), FORE(49), BACK(9), FORE(16) + END,
  BACK(27), FORE(47), BACK(10), FORE(16) + END,
  BACK(28), FORE(44), BACK(12), FORE(16) + END,
  BACK(30), FORE(41), BACK(13), FORE(16) + END,
  BACK(32), FORE(37), BACK(14), FORE(17) + END,
  BACK(34), FORE(33), BACK(16), FORE(17) + END,
  BACK(36), FORE(28), BACK(19), FORE(17) + END,
  BACK(39), FORE(22), BACK(22), FORE(17) + END,
  BACK(44), FORE(13), BACK(26), FORE(16) + END,
  BACK(83), FORE(16) + END,
  BACK(83), FORE(16) + END,
  BACK(82), FORE(17) + END,
  BACK(82), FORE(17) + END,
  BACK(82), FORE(17) + END,
  BACK(82), FORE(16) + END,
  BACK(81), FORE(17) + END,
  BACK(81), FORE(17) + END,
  BACK(81), FORE(17) + END,
  BACK(81), FORE(17) + END,
  BACK(80), FORE(17) + END,
  BACK(80), FORE(17) + END,
  BACK(80), FORE(17) + END,
  BACK(79), FORE(17) + END,
  BACK(19), FORE(9), BACK(51), FORE(17) + END,
  BACK(11), FORE(17), BACK(51), FORE(17) + END,
  BACK(11), FORE(18), BACK(49), FORE(17) + END,
  BACK(11), FORE(18), BACK(49), FORE(17) + END,
  BACK(12), FORE(17), BACK(48), FORE(18) + END,
  BACK(12), FORE(17), BACK(48), FORE(17) + END,
  BACK(12), FORE(18), BACK(46), FORE(18) + END,
  BACK(12), FORE(18), BACK(46), FORE(18) + END,
  BACK(12), FORE(18), BACK(45), FORE(18) + END,
  BACK(13), FORE(18), BACK(44), FORE(18) + END,
  BACK(13), FORE(18), BACK(43), FORE(18) + END,
  BACK(13), FORE(19), BACK(41), FORE(19) + END,
  BACK(14), FORE(18), BACK(41), FORE(18) + END,
  BACK(14), FORE(19), BACK(39), FORE(18) + END,
  BACK(15), FORE(19), BACK(37), FORE(19) + END,
  BACK(15), FORE(20), BACK(35), FORE(19) + END,
  BACK(16), FORE(20), BACK(32), FORE(21) + END,
  BACK(16), FORE(21), BACK(30), FORE(21) + END,
  BACK(17), FORE(21), BACK(27), FORE(22) + END,
  BACK(17), FORE(23), BACK(23), FORE(23) + END,
  BACK(18), FORE(24), BACK(19), FORE(24) + END,
  BACK(19), FORE(27), BACK(11), FORE(28) + END,
  BACK(19), FORE(65) + END,
  BACK(20), FORE(63) + END,
  BACK(21), FORE(61) + END,
  BACK(22), FORE(59) + END,
  BACK(23), FORE(56) + END,
  BACK(24), FORE(54) + END,
  BACK(26), FORE(51) + END,
  BACK(27), FORE(48) + END,
  BACK(29), FORE(44) + END,
  BACK(30), FORE(41) + END,
  BACK(32), FORE(37) + END,
  BACK(35), FORE(31) + END,
  BACK(38), FORE(25) + END,
  BACK(43), FORE(15) + END,
  BACK(110) + END,
  BACK(110) + END,
  BACK(110) + END,
};

const byte* lowerData[] =
{
  rowData0Lower,
  rowData1Lower,
  rowData2Lower,
  rowData3Lower,
  rowData4Lower,
  rowData5Lower,
  rowData6Lower,
  rowData7Lower,
  rowData8Lower,
  rowData9Lower,
};


void LargeDigits::drawDigit(int x, int y, bool top, int digit, 
                            bool compress, // 3 out of 4 rows
                            bool dark,     // darken the white foreground (shadow)
                            bool partial)  // only the first 1/4th of the rows
{
  int rows = partial?HalfHeight/4:HalfHeight;
  word Fore = dark?darkForegroundColour:foregroundColour; 
  word Back = dark?darkBackgroundColour:backgroundColour;
  if (0 <= digit && digit <= 9)
  {
    const byte* data = (top)?upperData[digit]:lowerData[digit];
    ILI948x::Window(x, (top && compress)?y + HalfHeight/4:y, Width, (compress)?3*HalfHeight/4:rows);
    for (int row = 0; row < rows; row++)
    {
      int remainder = Width;
      bool background = true;
      byte span;
      do
      {
        span = pgm_read_byte(data++);
        if (!(compress && ((row % 4) == 0)))
        {
          int count = span & ~END;
          ILI948x::ColourWord(background?Back:Fore, count);
          remainder -= count;      
        }
  
        background = !background;
      } while (!(span & END));
      
      if (!(compress && ((row % 4) == 0)))
        ILI948x::ColourWord(Back, remainder);
    }
  }
  else
  {
    ILI948x::ColourWord(Back, ILI948x::Window(x, (top && compress)?y + HalfHeight/4:y, Width, (compress)?3*HalfHeight/4:rows));
  }
}

const word highlightColour = 0x9CF3;
void LargeDigits::drawFrame(int x, int y, int w, int h)
{
  // frame for digit at x, y dims w & h
  int margin = 4;
  int corner = 2;
  int topGap = 3; // extra at top
  int frameX = x - margin;
  int frameY = y - margin - topGap;
  int frameW = w + 2*margin;
  int frameH = h + 2*margin + topGap;
  // make the hole
  ILI948x::Window(frameX, frameY, frameW, frameH);
  for (int row = 0; row < frameH; row++)
  {
    if (row < corner)  // top corners
    {
      int inset = corner-row;
      ILI948x::ColourWord(backgroundColour, inset);
      ILI948x::ColourByte(0x00, frameW-2*inset);
      ILI948x::ColourWord(backgroundColour, inset);
    }
    else if (row >= frameH - 1 - corner)  // bottom corners and highlight
    {
      int inset = row - (frameH - 1 - corner);
      ILI948x::ColourWord(backgroundColour, inset);
      ILI948x::ColourWord(highlightColour, 1); 
      if (row == frameH - 1)
        ILI948x::ColourWord(highlightColour, frameW-2*inset-2); 
      else
        ILI948x::ColourByte(0x00, frameW-2*inset-2);
      ILI948x::ColourWord(highlightColour, 1); 
      ILI948x::ColourWord(backgroundColour, inset);
    }
    else
    {
      ILI948x::ColourByte(0x00, frameW);
    }
  }
  
  // detail at top of digit
  ILI948x::Window(x, y - topGap, w, topGap);
  ILI948x::ColourWord(backgroundColour, 1);
  ILI948x::ColourWord(highlightColour, w - 2);
  ILI948x::ColourWord(backgroundColour, 1);
  ILI948x::ColourWord(backgroundColour, w*(topGap-1));

  // hinges?
  int hingeH = 30;
  int hingeGapX = 1;
  int hingeW = margin - 2*hingeGapX;
  for (int side = 0; side <2; side++)
  {
    ILI948x::Window(side==0?frameX + hingeGapX:frameX + frameW - margin + hingeGapX, y + (h - hingeH)/2, hingeW, hingeH);
    for (int row = 0; row < hingeH; row++)
    {
      int highlightRow = abs(row - hingeH/4);
      if (highlightRow < 8)
        ILI948x::ColourWord(ByteHSVtoRGB(0,0,200-highlightRow*15), hingeW);
      else
        ILI948x::ColourWord(backgroundColour, hingeW);
    }
  }
}
